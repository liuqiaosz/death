<?xml version="1.0" encoding="utf-8"?>
<My:AdvanceTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:My="editor.ui.*"
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="400" title="资源选择" initialize="Initilalized(event)">
	<fx:Declarations>
		<!--
			组件选择图形资源弹出窗口
		-->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import editor.event.NotifyEvent;
			
			import pixel.ui.control.asset.IAsset;
			import pixel.ui.control.asset.IAssetLibrary;
			
			[Embed(source="assets/AssetLibrary.png")]
			private var TreeIcon:Class;
			[Embed(source="assets/AssetSwf.png")]
			private var TreeSwfIcon:Class;
			
			[Bindable]
			private var AssetLibraryTree:ArrayCollection = new ArrayCollection();
			
			private var LibArray:IAssetLibrary = null;
			private var Update:Boolean = false;
			public function set Item(Value:ArrayCollection):void
			{
				AssetLibraryTree = Value;

				if(!AssetLib)
				{
					Update = true;
				}
				else
				{
					Render();
				}
			}
			
			/**
			 * 数据渲染
			 **/
			private function Render():void
			{
				AssetLib.addEventListener(NotifyEvent.SELECTASSET,AssetSelected);
			}
			
			protected function Initilalized(event:FlexEvent):void
			{
				if(Update)
				{
					Render();
					Update = false;
				}
			}
			
			/**
			 * 资源库图标生成
			 **/
			private function TreeIconFactory(Item:Object):Class
			{
//				if(Item is SwfAssetLibrary)
//				{
//					return TreeSwfIcon;
//				}
//				return TreeIcon;	
				return TreeSwfIcon;
			}
			
			private var _CurrentLibrary:IAssetLibrary = null;
			/**
			 * 资源库选择 
			 **/
			private function TreeItemClick(event:ListEvent):void
			{
				AssetLib.removeAllElements();
				_CurrentLibrary = AssetLibraryTree.getItemAt(event.rowIndex) as IAssetLibrary;
				//var Assets:Array = Library.AssetList;
				var Idx:int = 0;
				var AssetChild:AssetItem = null;
				//var Assets:Array = _CurrentLibrary.AssetList;
				var assets:Vector.<IAsset> = _CurrentLibrary.assets;
				for(Idx=0; Idx<assets.length; Idx++)
				{
					AssetChild = new AssetItem();
					AssetChild.Item = assets[Idx];
					AssetLib.addElement(AssetChild);
					//AssetLib[Assets[Idx].Id] = AssetChild;
				}
//				if(_CurrentLibrary.Type == AssetLibraryType.SWF)
//				{
//					var ImageAssets:Array = SwfAssetLibrary(_CurrentLibrary).BitmapAssets;
//					for(Idx=0; Idx<ImageAssets.length; Idx++)
//					{
//						AssetChild = new AssetItem();
//						AssetChild.Item = ImageAssets[Idx];
//						AssetLib.addElement(AssetChild);
//						//AssetDiction[Assets[Idx].Id] = AssetChild;
//					}
//				}
//				else
//				{
//					var Assets:Array = _CurrentLibrary.AssetList;
//					for(Idx=0; Idx<Assets.length; Idx++)
//					{
//						AssetChild = new AssetItem();
//						AssetChild.Item = Assets[Idx];
//						AssetLib.addElement(AssetChild);
//						//AssetLib[Assets[Idx].Id] = AssetChild;
//					}
//					//AssetList.addEventListener(NotifyEvent.DELETEASSET,OnDeleteAsset);
//					//AssetList.visible = true;
//					//AssetList.includeInLayout = true;
//				}
			}
			
			protected function AssetSelected(event:NotifyEvent):void
			{
				var Notify:NotifyEvent = new NotifyEvent(NotifyEvent.SELECTEDASSET);
				var asset:IAsset = event.Params.pop() as IAsset;
				
				Notify.Params.push(asset);
				Notify.Params.push(asset.name);
				Notify.Params.push(_CurrentLibrary.id);
				
				dispatchEvent(Notify);
				CloseWindow();
			}
			
		]]>
	</fx:Script>
	
	<My:layout>
		<s:HorizontalLayout paddingLeft="5" paddingTop="5" paddingBottom="5" paddingRight="5" />
	</My:layout>
	
	<s:BorderContainer width="200" height="100%">
		<mx:Tree width="100%" height="100%" dataProvider="{AssetLibraryTree}" 
				 labelField="id" iconFunction="TreeIconFactory" itemClick="TreeItemClick(event)"/>
	</s:BorderContainer>
	
	<s:BorderContainer width="100%" height="100%">
		<s:Scroller width="100%" height="100%">
			<s:VGroup paddingBottom="5" paddingLeft="5" paddingRight="5" id="AssetLib" />
		</s:Scroller>
	</s:BorderContainer>
</My:AdvanceTitleWindow>
